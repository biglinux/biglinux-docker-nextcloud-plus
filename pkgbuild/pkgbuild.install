# Get the current non-root user
CURRENT_USER=$(who | awk 'NR==1{print $1}')

# Executed after package installation
post_install() {
    # Check if the Docker/Nextcloud-Plus folder exists, otherwise create it
    if [ ! -d /home/$CURRENT_USER/Docker/Nextcloud-Plus ]; then
        echo "Creating Docker/Nextcloud-Plus folder..."
        mkdir -p /home/$CURRENT_USER/Docker/Nextcloud-Plus
    fi

    # Check if Docker is installed
    if ! command -v docker >/dev/null 2>&1; then
        echo "The Docker package is not installed. Please install it before continuing."
        exit 1
    fi

    # Configuration directory path
    local config_dir="/home/$CURRENT_USER/Docker/Nextcloud-Plus/Collabora/config"

    # Create the configuration directory if it does not exist
    if [ ! -d "$config_dir" ]; then
        echo "Creating Collabora config directory..."
        mkdir -p "$config_dir"
    fi

    # Coolwsd.xml file path in the configuration directory
    local config_coolwsd_xml="$config_dir/coolwsd.xml"

    # Copy the coolwsd.xml file if it does not exist
    if [ ! -f "$config_coolwsd_xml" ]; then
        echo "Copying coolwsd.xml to Collabora config directory..."
        cp -f /etc/docker-biglinux/nextcloud-plus/coolwsd.xml "$config_coolwsd_xml"
    else
        echo "coolwsd.xml already exists in the Collabora config directory."
    fi
    
    # Start the Nextcloud-Plus container using 'docker compose'
    echo "Starting the Nextcloud-Plus container..."
    eval "HOME=/home/$CURRENT_USER docker compose -f /etc/docker-biglinux/nextcloud-plus/nextcloud.yml -f /etc/docker-biglinux/nextcloud-plus/collabora.yml up -d"
    
    # Symlink nextcloud.yml to Docker/Nextcloud-Plus folder
    echo "Creating symlink to nextcloud.yml..."
    ln -sf /etc/docker-biglinux/nextcloud-plus/nextcloud.yml /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud.yml
    
    # Symlink collabora.yml to Docker/Nextcloud-Plus folder
    echo "Creating symlink to collabora.yml..."
    ln -sf /etc/docker-biglinux/nextcloud-plus/collabora.yml /home/$CURRENT_USER/Docker/Nextcloud-Plus/collabora.yml
    
    # Ensure the Nextcloud container is ready
    echo "Waiting for Nextcloud to initialize..."
    until docker exec nextcloud php occ status 2>/dev/null | grep -q 'installed: true'; do
        sleep 5
    done

    # Install and enable the Collabora Online app
    echo "Installing and enabling the Collabora Online app..."
    docker exec -u www-data nextcloud php occ app:install richdocuments
    docker exec -u www-data nextcloud php occ app:enable richdocuments

    # Enable and start the nextcloudcron.timer service
    echo "Enabling and starting nextcloudcron.timer service..."
    systemctl enable nextcloudcron.timer
    systemctl start nextcloudcron.timer
    
    # Set the correct owner and group for the Docker folder and its contents
    echo "Setting correct permissions for Docker folder..." && sleep 1
    chown -R http:$CURRENT_USER /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud
    find /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud/ -type d -exec chmod 775 {} \;
    find /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud/ -type f -exec chmod 664 {} \;
}

# Upgrade package
post_upgrade() {
    post_install
}

# Executed before package removal
pre_remove() {
    # Stop and remove the Nextcloud-Plus container
    echo "Stopping and removing the Nextcloud-Plus container..."
    docker compose -f /etc/docker-biglinux/nextcloud-plus/nextcloud.yml -f /etc/docker-biglinux/nextcloud-plus/collabora.yml down
    
    # Remove symlink to nextcloud.yml in Docker/Nextcloud-Plus folder
    echo "Removing symbolic link to nextcloud.yml..."
    rm -f /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud.yml
    
    # Remove symlink to collabora.yml in Docker/Nextcloud-Plus folder
    echo "Removing symbolic link to collabora.yml..."
    rm -f /home/$CURRENT_USER/Docker/Nextcloud-Plus/collabora.yml
    
    # Stop and disable the nextcloudcron.timer service
    echo "Stopping and disabling nextcloudcron.timer service..."
    systemctl stop nextcloudcron.timer
    systemctl disable nextcloudcron.timer
}

# Executed after package removal
post_remove() {
    # Remove the Docker image
    echo "Removing the Nextcloud-Plus Docker image..."
    docker rmi postgres:13-alpine
    docker rmi nextcloud:stable
    docker rmi redis:alpine
    docker rmi collabora/code:latest
}
