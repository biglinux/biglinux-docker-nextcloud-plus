# Get the current non-root user
CURRENT_USER=$(who | awk 'NR==1{print $1}')

# Executed after package installation
post_install() {
	# Check if the Docker/Nextcloud-Plus folder exists, otherwise create it
    if [ ! -d /home/$CURRENT_USER/Docker/Nextcloud-Plus ]; then
        echo "Creating Docker/Nextcloud-Plus folder..."
        mkdir -p /home/$CURRENT_USER/Docker/Nextcloud-Plus
    fi

	# Check if Docker is installed
	if ! command -v docker >/dev/null 2>&1; then
		echo "The Docker package is not installed. Please install it before continuing."
		exit 1
	fi

	# Start the Nextcloud-Plus container using docker-compose
    echo "Starting the Nextcloud-Plus container..."

    # Expand $CURRENT_USER and execute docker-compose with eval
    eval "HOME=/home/$CURRENT_USER docker-compose -f /etc/docker-biglinux/nextcloud-plus/docker-compose.yml -f /etc/docker-biglinux/nextcloud-plus/collabora.yml up -d"
    
    # Symlink docker-compose.yml to Docker/Nextcloud-Plus folder
    echo "Creating symlink to docker-compose.yml..."
    ln -s /etc/docker-biglinux/nextcloud-plus/docker-compose.yml /home/$CURRENT_USER/Docker/Nextcloud-Plus/docker-compose.yml
    
    # Symlink collabora.yml to Docker/Nextcloud-Plus folder
    echo "Creating symlink to collabora.yml..."
    ln -s /etc/docker-biglinux/nextcloud-plus/collabora.yml /home/$CURRENT_USER/Docker/Nextcloud-Plus/collabora.yml
    
    # Wait until the Nextcloud container is ready
    while ! docker exec nextcloud php occ status 2>/dev/null; do
        echo "Waiting for Nextcloud to initialize..."
        sleep 5
    done

    # Install the Collabora Online app
    echo "Installing the Collabora Online app..."
    docker exec -u www-data nextcloud php occ app:install richdocuments
    
    # Set the correct owner and group for the Docker folder and its contents
    echo "Setting correct permissions for Docker folder..."
    chown -R http:$CURRENT_USER /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud
    find /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud/ -type d -exec chmod 775 {} \;
    find /home/$CURRENT_USER/Docker/Nextcloud-Plus/nextcloud/ -type f -exec chmod 664 {} \;
    
    # Check if the Certificate folder exists, otherwise create it
    CERTIFICATE_DIR="/home/$CURRENT_USER/Docker/Nextcloud-Plus/Certificate"
    if [ ! -d "$CERTIFICATE_DIR" ]; then
        echo "Creating Certificate folder..."
        mkdir -p "$CERTIFICATE_DIR"
    fi

    # Generate a self-signed certificate without the country code
    echo "Generating self-signed certificate..."
    openssl req -x509 -newkey rsa:4096 -nodes -keyout "$CERTIFICATE_DIR/private.key" -out "$CERTIFICATE_DIR/certificate.crt" -days 3650 -subj "/CN=biglinux.certs/O=BigLinux"
    
    # Enable and start the nextcloudcron.timer service
    echo "Enabling and starting nextcloudcron.timer service..."
    systemctl enable nextcloudcron.timer
    systemctl start nextcloudcron.timer
}

# Upgrade package
post_upgrade() {
    post_install
}

# Executed before package removal
pre_remove() {
	# Stop and remove the Nextcloud-Plus container
	echo "Stopping and removing the Nextcloud-Plus container..."
	docker-compose -f /etc/docker-biglinux/nextcloud-plus/docker-compose.yml -f /etc/docker-biglinux/nextcloud-plus/collabora.yml down
	
	# Remove symlink to docker-compose.yml in Docker/Nextcloud-Plus folder
    echo "Removing symbolic link to docker-compose.yml..."
    rm -f /home/$CURRENT_USER/Docker/Nextcloud-Plus/docker-compose.yml
    
    # Remove symlink to collabora.yml in Docker/Nextcloud-Plus folder
    echo "Removing symbolic link to collabora.yml..."
    rm -f /home/$CURRENT_USER/Docker/Nextcloud-Plus/collabora.yml
    
    # Remove the Certificate folder
    CERTIFICATE_DIR="/home/$CURRENT_USER/Docker/Nextcloud-Plus/Certificate"
    echo "Removing the Certificate folder..."
    rm -rf "$CERTIFICATE_DIR"
    
    # Stop and disable the nextcloudcron.timer service
    echo "Stopping and disabling nextcloudcron.timer service..."
    systemctl stop nextcloudcron.timer
    systemctl disable nextcloudcron.timer
}

# Executed after package removal
post_remove() {
	# Remove the Docker image
    echo "Removing the Nextcloud-Plus Docker image..."
    docker rmi postgres:13-alpine
    docker rmi nextcloud:stable
    docker rmi redis:alpine
    docker rmi collabora/code:latest
}
